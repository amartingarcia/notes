{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to My Notes \u00b6 In this repository I write my notes about different technologies.","title":"Home"},{"location":"#welcome-to-my-notes","text":"In this repository I write my notes about different technologies.","title":"Welcome to My Notes"},{"location":"git/multi_accounts/","text":"Multi-Accounts \u00b6 Sometimes it may be necessary to set up different git accounts for different directories. In my computer I use the following configuration: ~/.ssh/config.d/git Host github.com HostName github.com User git IdentityFile ~/.ssh/keys/github Host ssh.dev.azure.com HostName ssh.dev.azure.com User git IdentityFile ~/.ssh/keys/azdevops ~/.gitconfig [user] name = fullname-fake email = username-fake@company-fake.com [includeIf \"gitdir:~/repos/personal/\"] path = ~/repos/personal/.gitconfig ~/repo/personal/.gitconfig [user] name = personal-username-fake email = personal-email-fake","title":"Multi-accounts"},{"location":"git/multi_accounts/#multi-accounts","text":"Sometimes it may be necessary to set up different git accounts for different directories. In my computer I use the following configuration: ~/.ssh/config.d/git Host github.com HostName github.com User git IdentityFile ~/.ssh/keys/github Host ssh.dev.azure.com HostName ssh.dev.azure.com User git IdentityFile ~/.ssh/keys/azdevops ~/.gitconfig [user] name = fullname-fake email = username-fake@company-fake.com [includeIf \"gitdir:~/repos/personal/\"] path = ~/repos/personal/.gitconfig ~/repo/personal/.gitconfig [user] name = personal-username-fake email = personal-email-fake","title":"Multi-Accounts"},{"location":"kubernetes/kops/","text":"kOps \u00b6 Example file \u00b6 # kOps Cluster definition apiVersion: kops.k8s.io/v1alpha2 kind: Cluster metadata: ## Cluster name name: cluster.example spec: api: loadBalancer: class: Network type: Public assets: containerProxy: registry.com:9090 authorization: rbac: {} channel: stable cloudProvider: aws ## Bucket name and state file configBase: s3://bucket-name/cluster.example dnsZone: zone.example etcdClusters: - name: main cpuRequest: 200m etcdMembers: - instanceGroup: master-1 name: etcd-1 - instanceGroup: master-2 name: etcd-2 - instanceGroup: master-3 name: etcd-3 memoryRequest: 100Mi - name: events cpuRequest: 100m etcdMembers: - instanceGroup: master-1 name: etcd-1 - instanceGroup: master-2 name: etcd-2 - instanceGroup: master-3 name: etcd-3 memoryRequest: 100Mi iam: legacy: false ## Kubelet config kubelet: ### Enable to use metrics-server anonymousAuth: false ### Allow serviceaccount tokens to communicate with kubelet authorizationMode: Webhook authenticationTokenWebhook: true ## VPC CIDR access to Kubernetes API Server kubernetesApiAccess: [] kubernetesVersion: 1.22.6 masterPublicName: api.cluster.example ## VPC CIDR networkCIDR: 10.3.0.0/16 ## VPC ID networkID: vpc-00000000000 networking: ## CNI calico: majorVersion: v3 ### maximum transmission unit mtu: 1500 ## Internal kubernetes CIDR nonMasqueradeCIDR: 110.64.0.0/10 sshAccess: null subnets: - cidr: 12.0.0.0/24 id: subnet-00000000000 name: utility-eu-west-1c type: Utility zone: eu-west-1c - cidr: 10.3.2.0/23 id: subnet-1111111111 name: eu-west-1c type: Private zone: eu-west-1c topology: dns: type: Private masters: private nodes: private ## Addons awsLoadBalancerController: enabled: false clusterAutoscaler: enabled: true awsUseStaticInstanceList: false balanceSimilarNodeGroups: false expander: random image: k8s.gcr.io/autoscaling/cluster-autoscaler:v1.22.3 maxNodeProvisionTime: 15m0s newPodScaleUpDelay: 0s scaleDownDelayAfterAdd: 10m0s scaleDownUtilizationThreshold: \"0.5\" skipNodesWithLocalStorage: true skipNodesWithSystemPods: true cloudConfig: awsEBSCSIDriver: enabled: false managed: false nodeProblemDetector: enabled: true memoryRequest: 32Mi cpuRequest: 10m --- # IG master-1 apiVersion: kops.k8s.io/v1alpha2 kind: InstanceGroup metadata: labels: kops.k8s.io/cluster: cluster.example name: master-1 spec: additionalSecurityGroups: ## Manage by Terraform - sg-00000000000 autoscale: false iam: ## Manage by Terraform profile: arn:aws:iam::00000000000:instance-profile/MASTERS associatePublicIp: false rootVolumeSize: 30 rootVolumeType: gp3 ## AMI id for region image: ami-02b4e72b17337d6c1 ## master set max = 1 min = 1 minSize: 1 maxSize: 1 machineType: c5a.large ## Labels for Kubernetes nodeLabels: kops.k8s.io/instancegroup: master-1 project: master ## Labels for AWS cloudLabels: environment: Dev role: Master subnets: - eu-west-1c --- # IG master-2 apiVersion: kops.k8s.io/v1alpha2 kind: InstanceGroup metadata: labels: kops.k8s.io/cluster: cluster.example name: master-2 spec: additionalSecurityGroups: ## Manage by Terraform - sg-00000000000 autoscale: false iam: ## Manage by Terraform profile: arn:aws:iam::00000000000:instance-profile/MASTERS associatePublicIp: false rootVolumeSize: 30 rootVolumeType: gp3 ## AMI id for region image: ami-02b4e72b17337d6c1 ## master set max = 1 min = 1 minSize: 1 maxSize: 1 machineType: c5a.large ## Labels for Kubernetes nodeLabels: kops.k8s.io/instancegroup: master-2 project: master ## Labels for AWS cloudLabels: environment: Dev role: Master subnets: - eu-west-1c --- # IG master-3 apiVersion: kops.k8s.io/v1alpha2 kind: InstanceGroup metadata: labels: kops.k8s.io/cluster: cluster.example name: master-3 spec: additionalSecurityGroups: ## Manage by Terraform - sg-00000000000 autoscale: false iam: ## Manage by Terraform profile: arn:aws:iam::00000000000:instance-profile/MASTERS associatePublicIp: false rootVolumeSize: 30 rootVolumeType: gp3 ## AMI id for region image: ami-02b4e72b17337d6c1 ## master set max = 1 min = 1 minSize: 1 maxSize: 1 machineType: c5a.large ## Labels for Kubernetes nodeLabels: kops.k8s.io/instancegroup: master-3 project: master ## Labels for AWS cloudLabels: environment: Dev role: Master subnets: - eu-west-1c --- # IG nodes apiVersion: kops.k8s.io/v1alpha2 kind: InstanceGroup metadata: labels: kops.k8s.io/cluster: cluster.example name: worker spec: additionalSecurityGroups: ## Manage by Terraform - sg-00000000000 iam: ## Manage by Terraform profile: arn:aws:iam::00000000000:instance-profile/MASTERS associatePublicIp: false rootVolumeSize: 30 rootVolumeType: gp3 ## AMI id for region image: ami-02b4e72b17337d6c1 minSize: 5 maxSize: 50 machineType: r5a.xlarge onDemandBase: 10 onDemandAboveBase: 0 ## Rolling upgrade rollingUpdate: drainAndTerminate: true maxSurge: 3 maxUnavailable: 2 ## Labels for Kubernetes nodeLabels: kops.k8s.io/instancegroup: nodes app: nodes ### Label to exclude from load balancers node.kubernetes.io/exclude-from-external-load-balancers: \"true\" ## Labels for AWS cloudLabels: k8s.io/cluster-autoscaler/enabled: \"\" k8s.io/cluster-autoscaler/cluster.example: \"\" k8s.io/cluster-autoscaler/node-template/label: \"\" environment: Dev role: Node subnets: - eu-west-1c","title":"kOps"},{"location":"kubernetes/kops/#kops","text":"","title":"kOps"},{"location":"kubernetes/kops/#example-file","text":"# kOps Cluster definition apiVersion: kops.k8s.io/v1alpha2 kind: Cluster metadata: ## Cluster name name: cluster.example spec: api: loadBalancer: class: Network type: Public assets: containerProxy: registry.com:9090 authorization: rbac: {} channel: stable cloudProvider: aws ## Bucket name and state file configBase: s3://bucket-name/cluster.example dnsZone: zone.example etcdClusters: - name: main cpuRequest: 200m etcdMembers: - instanceGroup: master-1 name: etcd-1 - instanceGroup: master-2 name: etcd-2 - instanceGroup: master-3 name: etcd-3 memoryRequest: 100Mi - name: events cpuRequest: 100m etcdMembers: - instanceGroup: master-1 name: etcd-1 - instanceGroup: master-2 name: etcd-2 - instanceGroup: master-3 name: etcd-3 memoryRequest: 100Mi iam: legacy: false ## Kubelet config kubelet: ### Enable to use metrics-server anonymousAuth: false ### Allow serviceaccount tokens to communicate with kubelet authorizationMode: Webhook authenticationTokenWebhook: true ## VPC CIDR access to Kubernetes API Server kubernetesApiAccess: [] kubernetesVersion: 1.22.6 masterPublicName: api.cluster.example ## VPC CIDR networkCIDR: 10.3.0.0/16 ## VPC ID networkID: vpc-00000000000 networking: ## CNI calico: majorVersion: v3 ### maximum transmission unit mtu: 1500 ## Internal kubernetes CIDR nonMasqueradeCIDR: 110.64.0.0/10 sshAccess: null subnets: - cidr: 12.0.0.0/24 id: subnet-00000000000 name: utility-eu-west-1c type: Utility zone: eu-west-1c - cidr: 10.3.2.0/23 id: subnet-1111111111 name: eu-west-1c type: Private zone: eu-west-1c topology: dns: type: Private masters: private nodes: private ## Addons awsLoadBalancerController: enabled: false clusterAutoscaler: enabled: true awsUseStaticInstanceList: false balanceSimilarNodeGroups: false expander: random image: k8s.gcr.io/autoscaling/cluster-autoscaler:v1.22.3 maxNodeProvisionTime: 15m0s newPodScaleUpDelay: 0s scaleDownDelayAfterAdd: 10m0s scaleDownUtilizationThreshold: \"0.5\" skipNodesWithLocalStorage: true skipNodesWithSystemPods: true cloudConfig: awsEBSCSIDriver: enabled: false managed: false nodeProblemDetector: enabled: true memoryRequest: 32Mi cpuRequest: 10m --- # IG master-1 apiVersion: kops.k8s.io/v1alpha2 kind: InstanceGroup metadata: labels: kops.k8s.io/cluster: cluster.example name: master-1 spec: additionalSecurityGroups: ## Manage by Terraform - sg-00000000000 autoscale: false iam: ## Manage by Terraform profile: arn:aws:iam::00000000000:instance-profile/MASTERS associatePublicIp: false rootVolumeSize: 30 rootVolumeType: gp3 ## AMI id for region image: ami-02b4e72b17337d6c1 ## master set max = 1 min = 1 minSize: 1 maxSize: 1 machineType: c5a.large ## Labels for Kubernetes nodeLabels: kops.k8s.io/instancegroup: master-1 project: master ## Labels for AWS cloudLabels: environment: Dev role: Master subnets: - eu-west-1c --- # IG master-2 apiVersion: kops.k8s.io/v1alpha2 kind: InstanceGroup metadata: labels: kops.k8s.io/cluster: cluster.example name: master-2 spec: additionalSecurityGroups: ## Manage by Terraform - sg-00000000000 autoscale: false iam: ## Manage by Terraform profile: arn:aws:iam::00000000000:instance-profile/MASTERS associatePublicIp: false rootVolumeSize: 30 rootVolumeType: gp3 ## AMI id for region image: ami-02b4e72b17337d6c1 ## master set max = 1 min = 1 minSize: 1 maxSize: 1 machineType: c5a.large ## Labels for Kubernetes nodeLabels: kops.k8s.io/instancegroup: master-2 project: master ## Labels for AWS cloudLabels: environment: Dev role: Master subnets: - eu-west-1c --- # IG master-3 apiVersion: kops.k8s.io/v1alpha2 kind: InstanceGroup metadata: labels: kops.k8s.io/cluster: cluster.example name: master-3 spec: additionalSecurityGroups: ## Manage by Terraform - sg-00000000000 autoscale: false iam: ## Manage by Terraform profile: arn:aws:iam::00000000000:instance-profile/MASTERS associatePublicIp: false rootVolumeSize: 30 rootVolumeType: gp3 ## AMI id for region image: ami-02b4e72b17337d6c1 ## master set max = 1 min = 1 minSize: 1 maxSize: 1 machineType: c5a.large ## Labels for Kubernetes nodeLabels: kops.k8s.io/instancegroup: master-3 project: master ## Labels for AWS cloudLabels: environment: Dev role: Master subnets: - eu-west-1c --- # IG nodes apiVersion: kops.k8s.io/v1alpha2 kind: InstanceGroup metadata: labels: kops.k8s.io/cluster: cluster.example name: worker spec: additionalSecurityGroups: ## Manage by Terraform - sg-00000000000 iam: ## Manage by Terraform profile: arn:aws:iam::00000000000:instance-profile/MASTERS associatePublicIp: false rootVolumeSize: 30 rootVolumeType: gp3 ## AMI id for region image: ami-02b4e72b17337d6c1 minSize: 5 maxSize: 50 machineType: r5a.xlarge onDemandBase: 10 onDemandAboveBase: 0 ## Rolling upgrade rollingUpdate: drainAndTerminate: true maxSurge: 3 maxUnavailable: 2 ## Labels for Kubernetes nodeLabels: kops.k8s.io/instancegroup: nodes app: nodes ### Label to exclude from load balancers node.kubernetes.io/exclude-from-external-load-balancers: \"true\" ## Labels for AWS cloudLabels: k8s.io/cluster-autoscaler/enabled: \"\" k8s.io/cluster-autoscaler/cluster.example: \"\" k8s.io/cluster-autoscaler/node-template/label: \"\" environment: Dev role: Node subnets: - eu-west-1c","title":"Example file"},{"location":"kubernetes/helm/helm/","text":"Helm \u00b6 Helm helps you manage Kubernetes applications. A Kubernetes manifest describes the resources (e.g., Deployments, Services, Pods, etc.) you want to create, and how you want those resources to run inside a cluster. apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment namespace: my-namespace labels: app: nginx spec: replicas: 3 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.14.2 ports: - containerPort: 80 Helm Charts \u00b6 Helm uses a packaging format called Charts. A Helm Chart is a collection of files that describe a set of Kubernetes resources. Directory hierarchy \u00b6 . \u2514\u2500\u2500 my-release \u251c\u2500\u2500 charts \u251c\u2500\u2500 Chart.yaml \u251c\u2500\u2500 templates \u2502 \u251c\u2500\u2500 deployment.yaml \u2502 \u251c\u2500\u2500 _helpers.tpl \u2502 \u251c\u2500\u2500 hpa.yaml \u2502 \u251c\u2500\u2500 ingress.yaml \u2502 \u251c\u2500\u2500 NOTES.txt \u2502 \u251c\u2500\u2500 serviceaccount.yaml \u2502 \u251c\u2500\u2500 service.yaml \u2502 \u2514\u2500\u2500 tests \u2502 \u2514\u2500\u2500 test-connection.yaml \u2514\u2500\u2500 values.yaml Helm can be supplemented with some features: * Helm-diff * Helm-git * Helm-secrets * SOPS * VALS * Helmfile","title":"Helm"},{"location":"kubernetes/helm/helm/#helm","text":"Helm helps you manage Kubernetes applications. A Kubernetes manifest describes the resources (e.g., Deployments, Services, Pods, etc.) you want to create, and how you want those resources to run inside a cluster. apiVersion: apps/v1 kind: Deployment metadata: name: nginx-deployment namespace: my-namespace labels: app: nginx spec: replicas: 3 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:1.14.2 ports: - containerPort: 80","title":"Helm"},{"location":"kubernetes/helm/helm/#helm-charts","text":"Helm uses a packaging format called Charts. A Helm Chart is a collection of files that describe a set of Kubernetes resources.","title":"Helm Charts"},{"location":"kubernetes/helm/helm/#directory-hierarchy","text":". \u2514\u2500\u2500 my-release \u251c\u2500\u2500 charts \u251c\u2500\u2500 Chart.yaml \u251c\u2500\u2500 templates \u2502 \u251c\u2500\u2500 deployment.yaml \u2502 \u251c\u2500\u2500 _helpers.tpl \u2502 \u251c\u2500\u2500 hpa.yaml \u2502 \u251c\u2500\u2500 ingress.yaml \u2502 \u251c\u2500\u2500 NOTES.txt \u2502 \u251c\u2500\u2500 serviceaccount.yaml \u2502 \u251c\u2500\u2500 service.yaml \u2502 \u2514\u2500\u2500 tests \u2502 \u2514\u2500\u2500 test-connection.yaml \u2514\u2500\u2500 values.yaml Helm can be supplemented with some features: * Helm-diff * Helm-git * Helm-secrets * SOPS * VALS * Helmfile","title":"Directory hierarchy"},{"location":"kubernetes/helm/helmfile/","text":"Helmfile \u00b6 Helmfile is a Helm wrapper that allows to manage multiple Helm Charts in a simpler way. Requirements \u00b6 Helmfile Helm Helm-diff Helm-secrets SOPS By default export HELM_SECRETS_BACKEND=sops . VALS export HELM_SECRETS_BACKEND=vals . Hierarchy \u00b6 . \u251c\u2500\u2500 bases \u2502 \u251c\u2500\u2500 environments.yaml ------------------------------------------> (Environments are defined. And versions are declared for the official Helm Charts) \u2502 \u2514\u2500\u2500 helmDefaults.yaml ------------------------------------------> (Default values of the Helm deployment. For example: wait or timeout) \u251c\u2500\u2500 helmfile.yaml --------------------------------------------------> (Main helmfile.yaml file) \u251c\u2500\u2500 releases -------------------------------------------------------> (Directory to locate all releases) \u2502 \u2514\u2500\u2500 my-release \u2502 \u251c\u2500\u2500 defaults.yaml ------------------------------------------> (Set default values for the release) \u2502 \u251c\u2500\u2500 envs ---------------------------------------------------> (Environment directory) \u2502 \u2502 \u251c\u2500\u2500 dev \u2502 \u2502 \u2502 \u251c\u2500\u2500 aws-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from AWS) \u2502 \u2502 \u2502 \u251c\u2500\u2500 az-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Azure) \u2502 \u2502 \u2502 \u251c\u2500\u2500 gcp-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from GCP) \u2502 \u2502 \u2502 \u251c\u2500\u2500 hc-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Hashicorp Vault) \u2502 \u2502 \u2502 \u251c\u2500\u2500 az-local-secret-values.yaml --------------------> (Optional. File with values encrypted locally with SOPS) \u2502 \u2502 \u2502 \u251c\u2500\u2500 .sops.yaml -> ../../../../templates/.sops.yaml -> (Symbolic link to .sops.yaml file) \u2502 \u2502 \u2502 \u251c\u2500\u2500 values.yaml.gotmpl -----------------------------> (Environment value using gotmpl) \u2502 \u2502 \u2502 \u2514\u2500\u2500 values.yaml ------------------------------------> (environment value file) \u2502 \u2502 \u251c\u2500\u2500 pre \u2502 \u2502 \u2502 \u251c\u2500\u2500 aws-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from AWS) \u2502 \u2502 \u2502 \u251c\u2500\u2500 az-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Azure) \u2502 \u2502 \u2502 \u251c\u2500\u2500 gcp-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from GCP) \u2502 \u2502 \u2502 \u251c\u2500\u2500 hc-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Hashicorp Vault) \u2502 \u2502 \u2502 \u251c\u2500\u2500 az-local-secret-values.yaml --------------------> (Optional. File with values encrypted locally with SOPS) \u2502 \u2502 \u2502 \u251c\u2500\u2500 .sops.yaml -> ../../../../templates/.sops.yaml -> (Symbolic link to .sops.yaml file) \u2502 \u2502 \u2502 \u251c\u2500\u2500 values.yaml.gotmpl -----------------------------> (Environment value using gotmpl) \u2502 \u2502 \u2502 \u2514\u2500\u2500 values.yaml ------------------------------------> (environment value file) \u2502 \u2502 \u2514\u2500\u2500 pro \u2502 \u2502 \u251c\u2500\u2500 aws-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from AWS) \u2502 \u2502 \u251c\u2500\u2500 az-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Azure) \u2502 \u2502 \u251c\u2500\u2500 gcp-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from GCP) \u2502 \u2502 \u251c\u2500\u2500 hc-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Hashicorp Vault) \u2502 \u2502 \u251c\u2500\u2500 az-local-secret-values.yaml --------------------> (Optional. File with values encrypted locally with SOPS) \u2502 \u2502 \u251c\u2500\u2500 .sops.yaml -> ../../../../templates/.sops.yaml -> (Symbolic link to .sops.yaml file) \u2502 \u2502 \u251c\u2500\u2500 values.yaml.gotmpl -----------------------------> (Environment value using gotmpl) \u2502 \u2502 \u2514\u2500\u2500 values.yaml ------------------------------------> (Environment value file) \u2502 \u2514\u2500\u2500 helmfile.yaml ------------------------------------------> (Helmfile.yaml release file) \u2514\u2500\u2500 templates ------------------------------------------------------> (Template directory) \u251c\u2500\u2500 default_values.yaml ----------------------------------------> (File with declared YAML Anchors that allow parameterizing the access to the value files) \u2514\u2500\u2500 .sops.yaml -------------------------------------------------> (File with SOPS encryption rules) Example files \u00b6 bases/environments.yaml \u00b6 --- templates: default_releases: &default_releases values: - metrics-server: 3.8.2 - reloader: 0.0.118 environments: dev: values: <<: *default_releases pre: values: <<: *default_releases pro: values: <<: *default_releases bases/helmDefaults.yaml \u00b6 --- # If set to \"Error\", return an error when a subhelmfile points to a # non-existent path. The default behavior is to print a warning and continue. missingFileHandler: Error # these labels will be applied to all releases in a Helmfile. Useful in templating if you have a helmfile per environment or customer and don't want to copy the same label to each release commonLabels: provisioning: helmfile # Default values to set for args along with dedicated keys that can be set by contributors, cli args take precedence over these. # In other words, unset values results in no flags passed to helm. # See the helm usage (helm SUBCOMMAND -h) for more info on default values when those flags aren't provided. helmDefaults: # wait for k8s resources via --wait. (default false) wait: false # if set and --wait enabled, will wait until all Jobs have been completed before marking the release as successful. It will wait for as long as --timeout (default false, Implemented in Helm3.5) waitForJobs: false # time in seconds to wait for any individual Kubernetes operation (like Jobs for hooks, and waits on pod/pvc/svc/deployment readiness) (default 300) timeout: 600 # verify the chart before upgrading (only works with packaged charts not directories) (default false) verify: false # forces resource update through delete/recreate if needed (default false) force: false ## enable TLS for request to Tiller (default false) #tls: true ## path to TLS CA certificate file (default \"$HELM_HOME/ca.pem\") #tlsCACert: \"path/to/ca.pem\" ## path to TLS certificate file (default \"$HELM_HOME/cert.pem\") #tlsCert: \"path/to/cert.pem\" ## path to TLS key file (default \"$HELM_HOME/key.pem\") #tlsKey: \"path/to/key.pem\" # limit the maximum number of revisions saved per release. Use 0 for no limit. (default 10) historyMax: 10 # when using helm 3.2+, automatically create release namespaces if they do not exist (default true) createNamespace: true # if used with charts museum allows to pull unstable charts for deployment, for example: if 1.2.3 and 1.2.4-dev versions exist and set to true, 1.2.4-dev will be pulled (default false) devel: false # When set to `true`, skips running `helm dep up` and `helm dep build` on this release's chart. # Useful when the chart is broken, like seen in https://github.com/roboll/helmfile/issues/1547 #skipDeps: false templates/.sops.yaml \u00b6 creation_rules: # PGP - path_regex: pgp-local.*.yaml$ pgp: B911C4BA2C10BF8BA1D9D005A680D32C9AE9B9CB # HC Vault - path_regex: hc-local-.*.yaml$ vault_path: \"sops/\" vault_kv_mount_name: \"secret/\" vault_kv_version: 2 # GCP KMS - path_regex: gcp-local-.*.yaml$ gcp_kms: projects/mygcproject/locations/global/keyRings/mykeyring/cryptoKeys/thekey # AWS KMS - path_regex: aws-local-.*.yaml$ kms: 'arn:aws:kms:us-west-2:0000000000000:key/fe86dd69-4132-404c-ab86-4269956b4500' # AZ Key Vault - path_regex: az-local-.*.yaml$ azure_keyvault: https://test.vault.azure.net/keys/sops/7b7c6b92999b42e79d744a0d4dc23e4adf templates/default_values.yaml \u00b6 --- templates: # Labels any_enc_labels: &any_enc_labels labels: enc: any sops_enc_labels: &sops_enc_labels labels: enc: sops vals_enc_labels: &vals_enc_labels labels: enc: vals # Values files default_values: &default_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml gotmpl_values: &gotmpl_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml.gotmpl remote_values: &remote_values values: - defaults.yaml - git::https://user:{{ env \"CI_JOB_TOKEN\" }}@git.company.com/demo/helmfiles/{{ .Environment.Name }}/values.yaml?ref=master - http://$HOSTNAME/artifactory/example-repo-local/test.tgz@values.yaml # Secrets on values files ## Local `SOPS` pgp_local_secret_values: &pgp_local_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/pgp-local-secret-values.yaml hc_local_secret_values: &hc_local_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/hc-local-secret-values.yaml gcp_local_secret_values: &gcp_local_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/gcp-local-secret-values.yaml aws_local_secret_values: &aws_local_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/aws-local-secret-values.yaml az_local_secret_values: &az_local_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/az-local-secret-values.yaml ## Remote `VALS` hc_remote_secret_values: &hc_remote_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/hc-remote-secret-values.yaml gcp_remote_secret_values: &gcp_remote_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/gcp-remote-secret-values.yaml aws_remote_secret_values: &aws_remote_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/aws-remote-secret-values.yaml az_remote_secret_values: &az_remote_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/az-remote-secret-values.yaml helmfile.yaml \u00b6 --- bases: - \"bases/helmDefaults.yaml\" - \"bases/environments.yaml\" repositories: - name: metrics-server url: https://kubernetes-sigs.github.io/metrics-server/ - name: reloader url: https://stakater.github.io/stakater-charts helmfiles: - \"releases/*/helmfile.yaml\" releases/metrics-server/helmfile.yaml \u00b6 ---- bases: - \"../../bases/helmDefaults.yaml\" - \"../../bases/environments.yaml\" --- {{ readFile \"../../templates/default_values.yaml\" }} releases: # https://github.com/helm/charts/blob/master/stable/metrics-server/values.yaml - name: metrics-server chart: metrics-server/metrics-server namespace: metrics-server version: {{ index (.Values | get \"metrics-server\" \"3.7.0\") }} <<: *any_enc_labels # You can use: any_enc_labels, sops_enc_labels or vals_enc_labels <<: *gotmpl_values # Depending on the type of values you need, # you can use the anchors declared in the defaults_values.yaml file. # Example: default_values, remote_values, gcp_remote_secret_values, gcp_local_secret_values ... releases/metrics-server/defaults.yaml \u00b6 # Custom values for metrics-server. # This is a YAML-formatted file. # Declare variables to be passed into your templates. --- args: # enable this if you have self-signed certificates, see: https://github.com/kubernetes-incubator/metrics-server - --kubelet-insecure-tls releases/metrics-server/envs/dev/values.yaml \u00b6 # Custom values to dev environment. # This is a YAML-formatted file. # Declare variables to be passed into your templates. --- podLabels: env: \"\" releases/metrics-server/envs/dev/values.yaml.gtmpl \u00b6 {{ readFile \"values.yaml\" | fromYaml | setValueAtPath \"podLabels.env\" .Environment.Name | toYaml }} Hemfile Commands \u00b6 Rendering dev environment \u00b6 $ helmfile template --environment dev Rendering dev environment for metrics-server \u00b6 $ helmfile template --environment dev --selector name=metrics-server Diff. Shows differences between the code and the cluster \u00b6 $ helmfile diff --environment dev --selector name=metrics-server Linters \u00b6 $ helmfile lint --environment dev Sync (Install) metrics-server release \u00b6 $ helmfile sync --environment dev --selector name=metrics-server Delete metrics-server release \u00b6 $ helmfile destroy --environment dev --selector name=metrics-server","title":"Helm"},{"location":"kubernetes/helm/helmfile/#helmfile","text":"Helmfile is a Helm wrapper that allows to manage multiple Helm Charts in a simpler way.","title":"Helmfile"},{"location":"kubernetes/helm/helmfile/#requirements","text":"Helmfile Helm Helm-diff Helm-secrets SOPS By default export HELM_SECRETS_BACKEND=sops . VALS export HELM_SECRETS_BACKEND=vals .","title":"Requirements"},{"location":"kubernetes/helm/helmfile/#hierarchy","text":". \u251c\u2500\u2500 bases \u2502 \u251c\u2500\u2500 environments.yaml ------------------------------------------> (Environments are defined. And versions are declared for the official Helm Charts) \u2502 \u2514\u2500\u2500 helmDefaults.yaml ------------------------------------------> (Default values of the Helm deployment. For example: wait or timeout) \u251c\u2500\u2500 helmfile.yaml --------------------------------------------------> (Main helmfile.yaml file) \u251c\u2500\u2500 releases -------------------------------------------------------> (Directory to locate all releases) \u2502 \u2514\u2500\u2500 my-release \u2502 \u251c\u2500\u2500 defaults.yaml ------------------------------------------> (Set default values for the release) \u2502 \u251c\u2500\u2500 envs ---------------------------------------------------> (Environment directory) \u2502 \u2502 \u251c\u2500\u2500 dev \u2502 \u2502 \u2502 \u251c\u2500\u2500 aws-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from AWS) \u2502 \u2502 \u2502 \u251c\u2500\u2500 az-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Azure) \u2502 \u2502 \u2502 \u251c\u2500\u2500 gcp-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from GCP) \u2502 \u2502 \u2502 \u251c\u2500\u2500 hc-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Hashicorp Vault) \u2502 \u2502 \u2502 \u251c\u2500\u2500 az-local-secret-values.yaml --------------------> (Optional. File with values encrypted locally with SOPS) \u2502 \u2502 \u2502 \u251c\u2500\u2500 .sops.yaml -> ../../../../templates/.sops.yaml -> (Symbolic link to .sops.yaml file) \u2502 \u2502 \u2502 \u251c\u2500\u2500 values.yaml.gotmpl -----------------------------> (Environment value using gotmpl) \u2502 \u2502 \u2502 \u2514\u2500\u2500 values.yaml ------------------------------------> (environment value file) \u2502 \u2502 \u251c\u2500\u2500 pre \u2502 \u2502 \u2502 \u251c\u2500\u2500 aws-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from AWS) \u2502 \u2502 \u2502 \u251c\u2500\u2500 az-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Azure) \u2502 \u2502 \u2502 \u251c\u2500\u2500 gcp-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from GCP) \u2502 \u2502 \u2502 \u251c\u2500\u2500 hc-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Hashicorp Vault) \u2502 \u2502 \u2502 \u251c\u2500\u2500 az-local-secret-values.yaml --------------------> (Optional. File with values encrypted locally with SOPS) \u2502 \u2502 \u2502 \u251c\u2500\u2500 .sops.yaml -> ../../../../templates/.sops.yaml -> (Symbolic link to .sops.yaml file) \u2502 \u2502 \u2502 \u251c\u2500\u2500 values.yaml.gotmpl -----------------------------> (Environment value using gotmpl) \u2502 \u2502 \u2502 \u2514\u2500\u2500 values.yaml ------------------------------------> (environment value file) \u2502 \u2502 \u2514\u2500\u2500 pro \u2502 \u2502 \u251c\u2500\u2500 aws-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from AWS) \u2502 \u2502 \u251c\u2500\u2500 az-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Azure) \u2502 \u2502 \u251c\u2500\u2500 gcp-remote-secret-values.yaml ------------------> (Optional. File with reference to remote encrypted values from GCP) \u2502 \u2502 \u251c\u2500\u2500 hc-remote-secret-values.yaml -------------------> (Optional. File with reference to remote encrypted values from Hashicorp Vault) \u2502 \u2502 \u251c\u2500\u2500 az-local-secret-values.yaml --------------------> (Optional. File with values encrypted locally with SOPS) \u2502 \u2502 \u251c\u2500\u2500 .sops.yaml -> ../../../../templates/.sops.yaml -> (Symbolic link to .sops.yaml file) \u2502 \u2502 \u251c\u2500\u2500 values.yaml.gotmpl -----------------------------> (Environment value using gotmpl) \u2502 \u2502 \u2514\u2500\u2500 values.yaml ------------------------------------> (Environment value file) \u2502 \u2514\u2500\u2500 helmfile.yaml ------------------------------------------> (Helmfile.yaml release file) \u2514\u2500\u2500 templates ------------------------------------------------------> (Template directory) \u251c\u2500\u2500 default_values.yaml ----------------------------------------> (File with declared YAML Anchors that allow parameterizing the access to the value files) \u2514\u2500\u2500 .sops.yaml -------------------------------------------------> (File with SOPS encryption rules)","title":"Hierarchy"},{"location":"kubernetes/helm/helmfile/#example-files","text":"","title":"Example files"},{"location":"kubernetes/helm/helmfile/#basesenvironmentsyaml","text":"--- templates: default_releases: &default_releases values: - metrics-server: 3.8.2 - reloader: 0.0.118 environments: dev: values: <<: *default_releases pre: values: <<: *default_releases pro: values: <<: *default_releases","title":"bases/environments.yaml"},{"location":"kubernetes/helm/helmfile/#baseshelmdefaultsyaml","text":"--- # If set to \"Error\", return an error when a subhelmfile points to a # non-existent path. The default behavior is to print a warning and continue. missingFileHandler: Error # these labels will be applied to all releases in a Helmfile. Useful in templating if you have a helmfile per environment or customer and don't want to copy the same label to each release commonLabels: provisioning: helmfile # Default values to set for args along with dedicated keys that can be set by contributors, cli args take precedence over these. # In other words, unset values results in no flags passed to helm. # See the helm usage (helm SUBCOMMAND -h) for more info on default values when those flags aren't provided. helmDefaults: # wait for k8s resources via --wait. (default false) wait: false # if set and --wait enabled, will wait until all Jobs have been completed before marking the release as successful. It will wait for as long as --timeout (default false, Implemented in Helm3.5) waitForJobs: false # time in seconds to wait for any individual Kubernetes operation (like Jobs for hooks, and waits on pod/pvc/svc/deployment readiness) (default 300) timeout: 600 # verify the chart before upgrading (only works with packaged charts not directories) (default false) verify: false # forces resource update through delete/recreate if needed (default false) force: false ## enable TLS for request to Tiller (default false) #tls: true ## path to TLS CA certificate file (default \"$HELM_HOME/ca.pem\") #tlsCACert: \"path/to/ca.pem\" ## path to TLS certificate file (default \"$HELM_HOME/cert.pem\") #tlsCert: \"path/to/cert.pem\" ## path to TLS key file (default \"$HELM_HOME/key.pem\") #tlsKey: \"path/to/key.pem\" # limit the maximum number of revisions saved per release. Use 0 for no limit. (default 10) historyMax: 10 # when using helm 3.2+, automatically create release namespaces if they do not exist (default true) createNamespace: true # if used with charts museum allows to pull unstable charts for deployment, for example: if 1.2.3 and 1.2.4-dev versions exist and set to true, 1.2.4-dev will be pulled (default false) devel: false # When set to `true`, skips running `helm dep up` and `helm dep build` on this release's chart. # Useful when the chart is broken, like seen in https://github.com/roboll/helmfile/issues/1547 #skipDeps: false","title":"bases/helmDefaults.yaml"},{"location":"kubernetes/helm/helmfile/#templatessopsyaml","text":"creation_rules: # PGP - path_regex: pgp-local.*.yaml$ pgp: B911C4BA2C10BF8BA1D9D005A680D32C9AE9B9CB # HC Vault - path_regex: hc-local-.*.yaml$ vault_path: \"sops/\" vault_kv_mount_name: \"secret/\" vault_kv_version: 2 # GCP KMS - path_regex: gcp-local-.*.yaml$ gcp_kms: projects/mygcproject/locations/global/keyRings/mykeyring/cryptoKeys/thekey # AWS KMS - path_regex: aws-local-.*.yaml$ kms: 'arn:aws:kms:us-west-2:0000000000000:key/fe86dd69-4132-404c-ab86-4269956b4500' # AZ Key Vault - path_regex: az-local-.*.yaml$ azure_keyvault: https://test.vault.azure.net/keys/sops/7b7c6b92999b42e79d744a0d4dc23e4adf","title":"templates/.sops.yaml"},{"location":"kubernetes/helm/helmfile/#templatesdefault_valuesyaml","text":"--- templates: # Labels any_enc_labels: &any_enc_labels labels: enc: any sops_enc_labels: &sops_enc_labels labels: enc: sops vals_enc_labels: &vals_enc_labels labels: enc: vals # Values files default_values: &default_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml gotmpl_values: &gotmpl_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml.gotmpl remote_values: &remote_values values: - defaults.yaml - git::https://user:{{ env \"CI_JOB_TOKEN\" }}@git.company.com/demo/helmfiles/{{ .Environment.Name }}/values.yaml?ref=master - http://$HOSTNAME/artifactory/example-repo-local/test.tgz@values.yaml # Secrets on values files ## Local `SOPS` pgp_local_secret_values: &pgp_local_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/pgp-local-secret-values.yaml hc_local_secret_values: &hc_local_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/hc-local-secret-values.yaml gcp_local_secret_values: &gcp_local_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/gcp-local-secret-values.yaml aws_local_secret_values: &aws_local_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/aws-local-secret-values.yaml az_local_secret_values: &az_local_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/az-local-secret-values.yaml ## Remote `VALS` hc_remote_secret_values: &hc_remote_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/hc-remote-secret-values.yaml gcp_remote_secret_values: &gcp_remote_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/gcp-remote-secret-values.yaml aws_remote_secret_values: &aws_remote_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/aws-remote-secret-values.yaml az_remote_secret_values: &az_remote_secret_values values: - defaults.yaml - envs/{{ .Environment.Name }}/values.yaml secrets: - envs/{{ .Environment.Name }}/az-remote-secret-values.yaml","title":"templates/default_values.yaml"},{"location":"kubernetes/helm/helmfile/#helmfileyaml","text":"--- bases: - \"bases/helmDefaults.yaml\" - \"bases/environments.yaml\" repositories: - name: metrics-server url: https://kubernetes-sigs.github.io/metrics-server/ - name: reloader url: https://stakater.github.io/stakater-charts helmfiles: - \"releases/*/helmfile.yaml\"","title":"helmfile.yaml"},{"location":"kubernetes/helm/helmfile/#releasesmetrics-serverhelmfileyaml","text":"---- bases: - \"../../bases/helmDefaults.yaml\" - \"../../bases/environments.yaml\" --- {{ readFile \"../../templates/default_values.yaml\" }} releases: # https://github.com/helm/charts/blob/master/stable/metrics-server/values.yaml - name: metrics-server chart: metrics-server/metrics-server namespace: metrics-server version: {{ index (.Values | get \"metrics-server\" \"3.7.0\") }} <<: *any_enc_labels # You can use: any_enc_labels, sops_enc_labels or vals_enc_labels <<: *gotmpl_values # Depending on the type of values you need, # you can use the anchors declared in the defaults_values.yaml file. # Example: default_values, remote_values, gcp_remote_secret_values, gcp_local_secret_values ...","title":"releases/metrics-server/helmfile.yaml"},{"location":"kubernetes/helm/helmfile/#releasesmetrics-serverdefaultsyaml","text":"# Custom values for metrics-server. # This is a YAML-formatted file. # Declare variables to be passed into your templates. --- args: # enable this if you have self-signed certificates, see: https://github.com/kubernetes-incubator/metrics-server - --kubelet-insecure-tls","title":"releases/metrics-server/defaults.yaml"},{"location":"kubernetes/helm/helmfile/#releasesmetrics-serverenvsdevvaluesyaml","text":"# Custom values to dev environment. # This is a YAML-formatted file. # Declare variables to be passed into your templates. --- podLabels: env: \"\"","title":"releases/metrics-server/envs/dev/values.yaml"},{"location":"kubernetes/helm/helmfile/#releasesmetrics-serverenvsdevvaluesyamlgtmpl","text":"{{ readFile \"values.yaml\" | fromYaml | setValueAtPath \"podLabels.env\" .Environment.Name | toYaml }}","title":"releases/metrics-server/envs/dev/values.yaml.gtmpl"},{"location":"kubernetes/helm/helmfile/#hemfile-commands","text":"","title":"Hemfile Commands"},{"location":"kubernetes/helm/helmfile/#rendering-dev-environment","text":"$ helmfile template --environment dev","title":"Rendering dev environment"},{"location":"kubernetes/helm/helmfile/#rendering-dev-environment-for-metrics-server","text":"$ helmfile template --environment dev --selector name=metrics-server","title":"Rendering dev environment for metrics-server"},{"location":"kubernetes/helm/helmfile/#diff-shows-differences-between-the-code-and-the-cluster","text":"$ helmfile diff --environment dev --selector name=metrics-server","title":"Diff. Shows differences between the code and the cluster"},{"location":"kubernetes/helm/helmfile/#linters","text":"$ helmfile lint --environment dev","title":"Linters"},{"location":"kubernetes/helm/helmfile/#sync-install-metrics-server-release","text":"$ helmfile sync --environment dev --selector name=metrics-server","title":"Sync (Install) metrics-server release"},{"location":"kubernetes/helm/helmfile/#delete-metrics-server-release","text":"$ helmfile destroy --environment dev --selector name=metrics-server","title":"Delete metrics-server release"},{"location":"kubernetes/helm/sops/","text":"SOPS \u00b6 SOPS is a tool that allows the encryption of local files. For our use case we use a Key from Key Vault declared in the .sops.yaml file for file encryption. SOPS Commands \u00b6 Show file \u00b6 $ cat file.yaml --- secrets: admin-creds: stringData: user: user-fake password: password-fake Encrypt file \u00b6 $ sops -e -i file.yaml $ cat file.yaml secrets: admin-creds: stringData: user: ENC[AES256_GCM,data:qiZNFqw=,iv:n/rXJHTD8D8DD4iI3zF5JpjDeZKp+SPItQSq0ue5VXc=,tag:DeD5PA4OwbsmoSNzzdQtSg==,type:str] password: ENC[AES256_GCM,data:7uDh0tJ0c/0VOw==,iv:ft33mHwy4zpmTvvq1mHOasy5/6rQR70Gv189IImeRoQ=,tag:9yP4pM8Y8oSwYCcuPso0jQ==,type:str] sops: kms: [] gcp_kms: [] azure_kv: - vault_url: <vault-url> name: <key-name> version: <version-name> created_at: \"2022-10-20T09:33:41Z\" enc: Z130UV0JoF4XLZHnJ-Y0hIHVfSLVqAGEr3niWMosL0vRF00TaoreX2bm_JLy8LvvxNKgS3jZXKW5RGujq4bA2_scKrAarkAvOhdg2N4CgykO1Yq4_9KP0ZbmD_FE0nzj3VN8fQsin5kOYrOPjVl5u1x8YLpsFQekt6E_Jj8TEcPaJPmj32sfdxvSWdASYxuJandU5o2aDeuZ_dkX6H9MaNdD68SJCNJQaSMm0IaWENVsyE24KaPKgkkqkXW8Pv92BtKw-Xgg6O2jYb4trokobkraE-Siaq0EwGbGPCi7zVlNH6ImPLG5vHTCLa9HEiG5Nd88A5OOA1yJ45f5NMpFug hc_vault: [] age: [] lastmodified: \"2022-10-20T09:33:42Z\" mac: ENC[AES256_GCM,data:cq4UrhEJq0x+66pZ7/Ga3DLeMohXnLiCiFOorF+cZYBJXviIj2Ncaw/jYTiEF3D5i8OBoZCz2O9pxSOpHHvrdiETvNfj/0/pGmPWmuflsPJ6Ehen8pKOdh91tJ0K2cBUWzym5X21SxcTjhjg1h8pIsK32e5mgWDu6Oai/G6gnjs=,iv:v6Ds1O2w8T5OE8X9wh8Q9Fez/Blwdxd87Wy7hSnoozM=,tag:a66zoL/C1U97tOE1/jI4cQ==,type:str] pgp: [] unencrypted_suffix: _unencrypted version: 3.7.3 Decrypt file \u00b6 $ sops -d -i file.yaml","title":"SOPS"},{"location":"kubernetes/helm/sops/#sops","text":"SOPS is a tool that allows the encryption of local files. For our use case we use a Key from Key Vault declared in the .sops.yaml file for file encryption.","title":"SOPS"},{"location":"kubernetes/helm/sops/#sops-commands","text":"","title":"SOPS Commands"},{"location":"kubernetes/helm/sops/#show-file","text":"$ cat file.yaml --- secrets: admin-creds: stringData: user: user-fake password: password-fake","title":"Show file"},{"location":"kubernetes/helm/sops/#encrypt-file","text":"$ sops -e -i file.yaml $ cat file.yaml secrets: admin-creds: stringData: user: ENC[AES256_GCM,data:qiZNFqw=,iv:n/rXJHTD8D8DD4iI3zF5JpjDeZKp+SPItQSq0ue5VXc=,tag:DeD5PA4OwbsmoSNzzdQtSg==,type:str] password: ENC[AES256_GCM,data:7uDh0tJ0c/0VOw==,iv:ft33mHwy4zpmTvvq1mHOasy5/6rQR70Gv189IImeRoQ=,tag:9yP4pM8Y8oSwYCcuPso0jQ==,type:str] sops: kms: [] gcp_kms: [] azure_kv: - vault_url: <vault-url> name: <key-name> version: <version-name> created_at: \"2022-10-20T09:33:41Z\" enc: Z130UV0JoF4XLZHnJ-Y0hIHVfSLVqAGEr3niWMosL0vRF00TaoreX2bm_JLy8LvvxNKgS3jZXKW5RGujq4bA2_scKrAarkAvOhdg2N4CgykO1Yq4_9KP0ZbmD_FE0nzj3VN8fQsin5kOYrOPjVl5u1x8YLpsFQekt6E_Jj8TEcPaJPmj32sfdxvSWdASYxuJandU5o2aDeuZ_dkX6H9MaNdD68SJCNJQaSMm0IaWENVsyE24KaPKgkkqkXW8Pv92BtKw-Xgg6O2jYb4trokobkraE-Siaq0EwGbGPCi7zVlNH6ImPLG5vHTCLa9HEiG5Nd88A5OOA1yJ45f5NMpFug hc_vault: [] age: [] lastmodified: \"2022-10-20T09:33:42Z\" mac: ENC[AES256_GCM,data:cq4UrhEJq0x+66pZ7/Ga3DLeMohXnLiCiFOorF+cZYBJXviIj2Ncaw/jYTiEF3D5i8OBoZCz2O9pxSOpHHvrdiETvNfj/0/pGmPWmuflsPJ6Ehen8pKOdh91tJ0K2cBUWzym5X21SxcTjhjg1h8pIsK32e5mgWDu6Oai/G6gnjs=,iv:v6Ds1O2w8T5OE8X9wh8Q9Fez/Blwdxd87Wy7hSnoozM=,tag:a66zoL/C1U97tOE1/jI4cQ==,type:str] pgp: [] unencrypted_suffix: _unencrypted version: 3.7.3","title":"Encrypt file"},{"location":"kubernetes/helm/sops/#decrypt-file","text":"$ sops -d -i file.yaml","title":"Decrypt file"},{"location":"qa/semantic_release/","text":"Semantic Release \u00b6 Semantic-release is an application created in nodejs, it allows to analyze the commits of a repository for the creation of tags. This allows greater control over the code displayed. How Semantic Selease works \u00b6 Starting with v1.0.0: Commit message Release type Version fix(app): new fix Patch Release v1.0.1 feat(app): new feature MINOR Feature Release v1.1.0 perf(app): a change BREAKING CHANGE: change to major version Major Breaking Release v2.0.0 Starting from forecast-v1.2.5, we can add multiple types of commits but it will only count one: Commit message Version fix(app): new fix + fix(app): other fix v1.2.6 feat(app): new feature + feat(app): other feature v1.3.0","title":"Semantic Release"},{"location":"qa/semantic_release/#semantic-release","text":"Semantic-release is an application created in nodejs, it allows to analyze the commits of a repository for the creation of tags. This allows greater control over the code displayed.","title":"Semantic Release"},{"location":"qa/semantic_release/#how-semantic-selease-works","text":"Starting with v1.0.0: Commit message Release type Version fix(app): new fix Patch Release v1.0.1 feat(app): new feature MINOR Feature Release v1.1.0 perf(app): a change BREAKING CHANGE: change to major version Major Breaking Release v2.0.0 Starting from forecast-v1.2.5, we can add multiple types of commits but it will only count one: Commit message Version fix(app): new fix + fix(app): other fix v1.2.6 feat(app): new feature + feat(app): other feature v1.3.0","title":"How Semantic Selease works"}]}